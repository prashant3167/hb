"use strict";
function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
        return typeof e
    } : function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}! function(a) {
     var d = new Date();
    var n = d.getTime();
//    console.log(document.querySelector('#total_device').textContent);
    var file_name='HB_SIZING_'+document.querySelector('#total_device').textContent+'_'+n+'.csv';
    var u = {
            filename: file_name,
            appendTo: "body",
            separator: ",",
            newline: "\n",
            quoteFields: !0,
            trimContent: !0,
            excludeColumns: "",
            excludeRows: ""
        },
        c = {};

    function s(e) {
        var r = "",
            t = e.find("tr").not(c.excludeRows),
            i = t.first().find("td,th").filter(":visible").not(c.excludeColumns).length;
        return t.each(function(e, t) {
            a(t).find("td,th").filter(":visible").not(c.excludeColumns).each(function(e, t) {
                var o = a(t),
                    n = c.trimContent ? a.trim(o.text()) : o.text();
                r += c.quoteFields ? '"' + n.replace('"', '""') + '"' : n, r += e !== i - 1 ? c.separator : c.newline
            })
        }),r+=c.newline+c.newline+"Total number of devices"+c.separator+document.querySelector('#total_device').textContent+
        c.newline+"Total data size"+c.separator+document.querySelector('#total_data').textContent+
        c.newline+"Average number of playbooks per group"+c.separator+document.querySelector('#average_playbook').textContent+
        c.newline+"Total number of vCPUs"+c.separator+document.querySelector('#total_core').textContent+
        c.newline+"Total RAM"+c.separator+document.querySelector('#total_ram').textContent+
        c.newline+"Total Storage"+c.separator+document.querySelector('#total_storage').textContent+
        c.newline+c.newline+"No. of standard server(s) required to deploy healthbot to monitor your network"+c.separator+ document.querySelector('#server').textContent
,r
    }
    a.fn.table2csv = function(e, t) {
        if ("object" === _typeof(e) ? (t = e, e = "download") : void 0 === e && (e = "download"), "string" != typeof e) throw new Error('"action" argument must be a string');
        if (void 0 !== t && "object" !== _typeof(t)) throw new Error('"options" argument must be an object');
        c = a.extend({}, u, t);
        var o, n, r, i, l = this.filter("table");
        if (l.length <= 0) throw new Error("table2csv must be called on a <table> element");
        if (1 < l.length) throw new Error("converting multiple table elements at once is not supported yet");
        switch (e) {
            case "download":
                o = s(l),t=new Date(), n = 'HB_SIZING_'+document.querySelector('#total_device').textContent+'_'+t.getFullYear() + "_" + (t.getMonth() + 1) + "_" + t.getDate() + "_" +  t.getHours() + "_" + t.getMinutes() + "_" + t.getSeconds()+'.csv', r = o, (i = document.createElement("a")).setAttribute("href", "data:text/csv;charset=utf-8,\ufeff" + encodeURIComponent(r)), i.setAttribute("download", n), i.style.display = "none", document.body.appendChild(i), i.click(), document.body.removeChild(i);
                break;
            case "output":
                o = s(l), a(c.appendTo).append(a("<pre>").text(o));
                break;
            default:
                throw new Error('"action" argument must be one of the supported action strings')
        }
        return this
    }
}(jQuery);
